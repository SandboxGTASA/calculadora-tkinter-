
'https://www.youtube.com/watch?v=PCf6BWrbrRo&list=PLY050fuXgmRBv5MeHKlQMDSxSxUy78P7p&index=61'

from tkinter import *
from functools import partial
from math import sqrt



ck = Tk()
ck.title('Calk')
# ck.geometry('200x200')
ck.minsize(256,281)
ck.resizable(0,0)
color = ('black','cyan','white')
display = '[calculadora pythonica]'
font = 'Arial 15'
ck['bg'] = color[0]
resultado = Label(ck,text=display,font=font,bg=color[0],fg=color[1])
resultado.grid(row=4,column=0,columnspan=5)



def button_click(bt):
	if 'ca' in resultado['text']:
		if bt['text'] in ('-+*=/c'):
			pass
		else:
			resultado['text'] = bt['text']
	elif 'c' in bt['text']:
		resultado['text'] = display
	elif 'c' not in resultado['text']:
		if '=' in bt['text'] :
			resultado['text'] = str(eval(resultado['text']))
			#resultado['text'] = resultado['text']+'=cade a conta'
		else:
			resultado['text'] += bt['text']


def BUTTON_GENERATE(name,Line=0,col=0):
	self = Button(text=name,width=6,height=2,font='ArialBlack 12')
	self.grid(row=Line,column=col,sticky='news')
	self['command'] = partial(button_click, self)
	self['bg'] = color[0]
	self['fg'] = color[1]

def MEMORIZAR(bt):
	if 'c' in resultado['text'] :
		if 'M' not in bt['text']:
			resultado['text'] = bt['text']
		else:
			pass
	elif 'M' not in bt['text']: #len(bt['text']) > 0 and
		resultado['text'] += bt['text']
	else:
		bt['text'] = resultado['text']
		bt['fg'] = color[2]

numbers = tuple('789+456/123*c0=-')
# print(numbers)

#criar botoes pequenos

def MEM():
	for col in range(4):# gerar slot de memorias
		mem = Button(text='M'+str(col),width=2)
		mem.grid(row=1,column=col,sticky='news')
		mem['command'] = partial(MEMORIZAR,mem)
		mem['bg'] = color[0]
		mem['fg'] = color[1]
MEM()

def OP2(bt):
	if 'CE' in bt['text']:
		MEM()
	elif 'r' in bt['text']:
		resultado['text'] = str(sqrt(eval(resultado['text'])))
	elif '%' in bt['text'] and not 'c' in resultado['text']:
		pass
		#resultado['text'] += '%'#str(eval(resultado['text']*100/bt['text']))
	elif '.' in bt['text'] and not 'c' in resultado['text']:
		resultado['text'] += '.'

op2 = ('√(raiz)','%','.','CE(M)')

for line in range(4):
	bt = Button(text=op2[line])
	bt.grid(row=2,column=line,sticky='news')
	bt['command'] = partial(OP2,bt)
	bt['bg'] = color[0]
	bt['fg'] = color[1]



# print('(botao)\tgerado na[linha]|[coluna]:')
bt_name = 0
for row in range(4):
	for col in range(4):
		BUTTON_GENERATE(numbers[bt_name],int(row)+5,col=int(col))
		#print(f'|b({numbers[bt_name]})| \t\t\t\tl[{int(row)+1}]|\tc[{int(col)+1}]')
		bt_name += 1


anotar = Text(bg='lemonchiffon',bd=8,font='bold',fg=('#000000'),width=20,height=1)
anotar.grid(row=0,column=5,rowspan=10,sticky='news')
anotar.insert(END,'[Comentários]:')


menu = Menu(ck)
cadastro = Menu(menu)
cadastro.add_command(label='set_1')
menu.add_cascade(label='cadastro',menu=cadastro)
ck.config(menu=menu)


ck.mainloop()




'''
criar um backspace

189 <
18 <
1 

'''
